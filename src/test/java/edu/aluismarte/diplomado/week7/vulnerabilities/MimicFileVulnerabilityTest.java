package edu.aluismarte.diplomado.week7.vulnerabilities;

import edu.aluismarte.diplomado.model.week7.UploadFileResponse;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.springframework.http.ResponseEntity;
import org.springframework.mock.web.MockMultipartFile;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.nio.file.Files;
import java.util.Arrays;

import static org.junit.jupiter.api.Assertions.assertNotNull;

/**
 * @author aluis on 5/9/2022.
 */
class MimicFileVulnerabilityTest {

    private final MimicFileVulnerability mimicFileVulnerability = new MimicFileVulnerability();

    @Test
    void uploadNormalFile() {
        InputStream inputStream = Thread.currentThread().getContextClassLoader().getResourceAsStream("normalFile.txt");
        assertNotNull(inputStream);
        Assertions.assertDoesNotThrow(() -> {
            MockMultipartFile mockMultipartFile = new MockMultipartFile("file", "normalFile.txt", "text/plain", inputStream);
            ResponseEntity<UploadFileResponse> uploadFileResponseResponseEntity = mimicFileVulnerability.uploadFile(mockMultipartFile);
            UploadFileResponse uploadFileResponse = uploadFileResponseResponseEntity.getBody();
            System.out.println(uploadFileResponse);
            assertNotNull(uploadFileResponse);
        });
    }

    @Test
    void uploadBadFile() {
        InputStream inputStream = Thread.currentThread().getContextClassLoader().getResourceAsStream("MyBadFile.png");
        assertNotNull(inputStream);
        Assertions.assertDoesNotThrow(() -> {
            MockMultipartFile mockMultipartFile = new MockMultipartFile("file", "MyBadFile.png", "image/png", inputStream);
            ResponseEntity<UploadFileResponse> uploadFileResponseResponseEntity = mimicFileVulnerability.uploadFile(mockMultipartFile);
            UploadFileResponse uploadFileResponse = uploadFileResponseResponseEntity.getBody();
            System.out.println(uploadFileResponse);
            assertNotNull(uploadFileResponse);
        });
    }

    @Test
    void showContentFilesTest() {
        File dir = new File("./uploads");
        File[] files = dir.listFiles();
        assertNotNull(files);
        Arrays.stream(files).forEach(file -> {
            try {
                System.out.println("File Name: " + file.getName());
                System.out.println("File Content: \n---\n" + new String(Files.readAllBytes(file.toPath())) + "\n----");
            } catch (IOException e) {
                throw new RuntimeException(e);
            }
        });
    }

}